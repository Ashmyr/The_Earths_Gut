#textdomain wesnoth-The_Earths_Gut

#define INITIALIZE_CAMPAIGN_VARIABLES
#enddef
#define CLEAR_CAMPAIGN_VARIABLES
#enddef
#define INITIALIZE_SCENARIO_VARIABLES
    {VARIABLE bSeenDragon no}
#enddef
#define CLEAR_SCENARIO_VARIABLES
    {CLEAR_VARIABLE bSeenDragon}
#enddef

[scenario]
    ################################################################
    # scenario head

    id=22_The_caverns_of_flame
    name= _ "The Caverns of Flame"
    map_data={TEG_MAP 22_The_caverns_of_flame.map}
    victory_when_enemies_defeated=no
    {TURNS 99 88 77}
    {UNDERGROUND}

    {MOOD_BATTLE}
    {MOOD_EPIC}
    {MOOD_UNDERGROUND}

    [story]
        [part]
            story= _ "Meanwhile, Dulatus was entering the Caverns of Flame. The air crackled with the heat of nearby lava. It became clearer and clearer that this was the heart of a volcano."
            background=scenery/flames01.png
            scale_background=no # I could go either way on this... if no, it's too small, but if yes, it's too pixelated...
        [/part]
    [/story]
    # Uh... 4 separate travel maps?! Wtf?! Not sure which one to use...
#ifdef __UNUSED__
    {TRAVELMAP_THE_HAMMER_OF_THURSAGAN}
    {TRAVELMAP_OLD_ALLIANCE}
    {TRAVELMAP_ENDGAME}
    {TRAVELMAP_EPILOGUE}
#endif

    ################################################################
    #sides
    [side]
        # player
        side=1
        controller=human
        # Even though this scenario is a Dulatus scenario, we need to start as Hamel anyways for the HAMEL_TO_DULATUS macro to work:
        type=Advanced Dwarvish Fighter
        id=Hamel
        name= _ "Hamel"
        persistent=yes
        save_id=human_player
        team_name=resistance
        {FLAG_VARIANT knalgan}
#ifdef DEBUG_MODE
        {GOLD 220 210 200}
        canrecruit=yes
#else
        {GOLD 0 0 0}
        {NO_INCOME}
        canrecruit=no
        shroud=yes
        fog=yes
#endif
    [/side]

    # TODO: make sure custom enemy AI instructions work properly
    # also work on improving the gold/income amounts; current amounts are pretty arbitrary
    # also give enemy leaders names

    # Bottom left, nearer the player (compared to side 4), at 14,55:
    [side]
        side=2
        controller=ai
        type=Death Knight
        recruit=Chocobone # cost: 38g
        team_name=undead
        {GOLD 40 80 120} # i.e., 1 Chocobone, 2 Chocobones, or 3 Chocobones
        {INCOME 1 2 3}
        # Let's have this AI be offensive:
        [ai]
            aggression=1.0
            caution=0.0
            grouping=offensive
            leader_aggression=1.0
            leader_value=4.0
            recruitment_pattern=scout # (yes, Chocobones count as scouts...)
            [goal]
                [criteria]
                    side=1
                [/criteria]
                value={ON_DIFFICULTY 5 6 7}
            [/goal]
        [/ai]
    [/side]

    # Kinda central-ish, near the player, at 34,50:
    [side]
        side=3
        controller=ai
        # side 3's starting location isn't a keep, so make them monsters:
        type=Giant Spider
        canrecruit=no
        team_name=monsters
        # Use a micro AI for this in an event later, too
        [ai]
            [avoid]
                [filter_adjacent_location]
                    [filter]
                        canrecruit=yes
                    [/filter]
                [/filter_adjacent_location]
                [or]
                    terrain=*^V*
                [/or]
            [/avoid]
            scout_village_targeting=0.0
            village_value=0.0
            villages_per_scout=0
            [goal]
                [criteria]
                    race=dwarf
                [/criteria]
                value={ON_DIFFICULTY 7 8 9}
            [/goal]
            [goal]
                [criteria]
                    side=1
                [/criteria]
                value={ON_DIFFICULTY 5 6 7}
            [/goal]
        [/ai]
    [/side]

    # Bottom left, a bit farther in (compared to side 2), at 7,53:
    [side]
        side=4
        controller=ai
        type=Lich
        recruit=Fire Guardian # Cost 19g
        team_name=undead
        {GOLD 40 80 120} # i.e., 2 Fire Guardians, 4 Fire Guardians, or 6 Fire Guardians
        {INCOME 1 2 3}
        # Just keep this AI the default; no custom code here
    [/side]

    # Top left, at 8,5:
    [side]
        side=5
        controller=ai
        # As with side 3, side 5's starting location isn't a keep, either, so make them monsters, too:
        type=Fire Dragon
        id=firedragon
        canrecruit=no
        team_name=monsters
        # This side will get a micro AI in an event later, too
        [ai]
            [avoid]
                [filter_adjacent_location]
                    [filter]
                        canrecruit=yes
                        [or]
                            type=Skeletal Dragon,Fire Guardian
                        [/or]
                    [/filter]
                [/filter_adjacent_location]
                [or]
                    terrain=*^V*
                [/or]
            [/avoid]
            scout_village_targeting=0.0
            village_value=0.0
            villages_per_scout=0
        [/ai]
    [/side]

    # Upper-ish right, at 36,22:
    [side]
        side=6
        controller=ai
        # This one is the closest one to the hammer, so it gets to be ancient; none of the rest do, though:
        type=Ancient Lich
        recruit=Skeletal Dragon # Cost: 100g
        team_name=undead
        {GOLD 100 200 300} # i.e., 1 Skeletal Dragon, 2 Skeletal Dragons, or 3 Skeletal Dragons
        {INCOME 3 6 9}
        # Let's have their AI be focused on protecting the hammer:
        [ai]
            aggression=0.1
            caution=0.9
            grouping=defensive
            recruitment_pattern=fighter
            [goal]
                name=protect_location
                [criteria]
                    location_id="sceptre"
                [/criteria]
                protect_radius=10
                value={ON_DIFFICULTY 5 6 7}
            [/goal]
            [goal]
                name=target_location
                [criteria]
                    location_id="sceptre"
                [/criteria]
                value={ON_DIFFICULTY 4 5 6}
            [/goal]
            [goal]
                name=protect_unit
                [criteria]
                    side=6
                    canrecruit=yes
                [/criteria]
                protect_radius=6 # equal to Ancient Lich MP
                value={ON_DIFFICULTY 3 4 5}
            [/goal]
        [/ai]
    [/side]

    # Bottom right, at 47,57:
    [side]
        side=7
        controller=ai
        type=Lich
        recruit=Dread Bat # Cost: 34g (and yes, only the Dread ones; there's dialogue about it)
        team_name=undead
        {GOLD 40 80 120} # i.e., 1 bat, 2 bat, or 3 bats
        {INCOME 1 2 3}
        # Let's have their AI be focused on scouting:
        [ai]
            grouping=no
            scout_village_targeting=4.0
            village_value=2.0
            villages_per_scout=1
            recruitment_pattern=scout
        [/ai]
    [/side]

    ###################################################################################################################
    # prestart

    {SETUP_LUA}
    {SAVEFILE_COMPATIBILITY}

    [event]
        name=prestart
        {INITIALIZE_CAMPAIGN_VARIABLES}
        {INITIALIZE_SCENARIO_VARIABLES}
        [objectives]
            side=1
            summary=_"Final Objectives:"
            [objective]
                description=_"Find the Hammer of Thursagan"
                condition=win
            [/objective]
            {ALTERNATIVE_OBJECTIVE _"Defeat all enemy leaders."}
            [objective]
                description=_"Death of Dulatus"
                condition=lose
            [/objective]
            [objective]
                description=_"Death of Aiglathing (if you have him)"
                condition=lose
            [/objective]
            # TODO: remove this note once it's possible to do so:
            note=_"Due to this campaign being incomplete, this is the final scenario for now. The intention is to develop one more scenario to go after it, though. So, eventually it won't be the final scenario anymore!"
        [/objectives]

        [item]
            # location_id is called "sceptre" instead of "hammer" because I was copying from HttT's S17 ("Scepter of Fire")
            location_id="sceptre"
            image=items/hammer-runic.png
        [/item]

        # This next section is copied from S08 ("Lost"):
        ############################################################################################
        # leader flip section

        # Fill the Dulatus variable appropriately while developing this scenario, in case that the storing in scenario 20 was skipped.
        [if]
            [variable]
                name=u_Dulatus.length
                less_than=1
            [/variable]
            [and]
                [not]
                    [have_unit]
                        side=1
                        id=Dulatus
                        search_recall_list=yes
                    [/have_unit]
                [/not]
            [/and]
            [then]
                [unit]
                    type=Dwarvish Stalwart
                    id=Dulatus
                    side=1
                    profile="portraits/Dulatus.png"
                    name= _ "Dulatus"
                    unrenamable=yes
                    [modifications]
                        {TRAIT_LOYAL}
                        {TRAIT_HEALTHY}
                    [/modifications]
                    {IS_HERO}
                    advances_to=Dulatus Level Three
                    to_variable=u_Dulatus
                [/unit]
            [/then]
        [/if]

        # wmllint: recognize Dulatus
        # wmllint: recognize Hamel
        {HAMEL_TO_DULATUS} # (defined in utils/units.cfg)
        # store Hamel's loyal units:
        [store_unit]
            variable=u_HamelLoyalUnits
            [filter]
                side=1
                [not]
                    id=Dulatus
                [/not]
                [filter_wml]
                    [modifications]
                        {TRAIT_LOYAL}
                    [/modifications]
                [/filter_wml]
            [/filter]
            kill=true
        [/store_unit]
        # store the rest of the recall list:
        [store_unit]
            variable=u_HamelRecallList
            [filter]
                side=1
                [not]
                    id=Dulatus
                [/not]
            [/filter]
            kill=true
        [/store_unit]
        # store Hamel's gold:
        [store_gold]
            side=1
            variable=i_HamelGold
        [/store_gold]
        [modify_side]
            side=1
            gold=0
        [/modify_side]
        # and no friends to recruit:
        [disallow_recruit]
            side=1
            type=Dwarvish Fighter,Dwarvish Thunderer,Alchemist,Dwarvish Scout,Dwarvish Guardsman,Mage
        [/disallow_recruit]
        # leader flip section ends
        ############################################################################################

        [store_unit]
            variable=u_Dulatus
            [filter]
                id=Dulatus
            [/filter]
            kill=true
        [/store_unit]
        {VARIABLE u_Dulatus.x 33}
        {VARIABLE u_Dulatus.y 64}
        [hide_unit]
            x=$u_Dulatus.x
            y=$u_Dulatus.y
        [/hide_unit]
        [unstore_unit]
            variable=u_Dulatus
        [/unstore_unit]

        {FOREACH uDulatusUnits i_CurrentUnit}
            [unstore_unit]
                variable=uDulatusUnits[$i_CurrentUnit]
                x,y=33,64 # side 1's starting location
                find_vacant=yes
            [/unstore_unit]
        {NEXT i_CurrentUnit}
        {CLEAR_VARIABLE uDulatusUnits}
        [heal_unit]
            [filter]
                side=1
            [/filter]
            moves=full
            restore_attacks=yes
        [/heal_unit]
        # FIXME: somehow we end up with 2 Dulatuses; there should only be one.

        # Micro AI section:
        [micro_ai]
            side=3
            ai_type=big_animals
            action=add

            [filter]
                type=Giant Spider
            [/filter]
            [avoid_unit]
                canrecruit=yes
            [/avoid_unit]
            [filter_location]
                terrain=Uu,Uue,Uh,Uu^Uf
            [/filter_location]
        [/micro_ai]

        [micro_ai]
            side=5
            ai_type=hunter
            action=add

            id=firedragon
            [filter_location]
                [filter]
                    race=dwarf
                [/filter]
            [/filter_location]
            home_x,home_y=8,5
            rest_turns=2
#ifdef DEBUG_MODE
            show_messages=yes
#endif
        [/micro_ai]
    [/event]

    [event]
        name=start
        [message]
            side=1
            message=_"Let's go find that hammer!"
        [/message]
        {OBJ_POTION_HEALING 5 51 healingpotion1}
        {OBJ_POTION_HOLY 14 51 holywater1}
        {OBJ_POTION_STRONG 33 68 strengthpotion1}
        {OBJ_POTION_HOLY 31 68 holywater2}
        {OBJ_POTION_STRONG 28 65 strengthpotion2}
        {OBJ_POTION_HEALING 47 50 healingpotion2}
        {OBJ_POTION_HOLY 42 26 holywater3}
        {OBJ_POTION_HEALING 12 31 healingpotion3}
        {OBJ_POTION_STRONG 8 43 strengthpotion3}
        {OBJ_POTION_HEALING 4 46 healingpotion4}
        {PLACE_IMAGE "scenery/nest-empty.png" 8 5}
    [/event]

    # TODO: more dialogue on encountering/killing the various enemies
    [event]
        name=sighted
        [filter]
            type=Dread Bat
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [message]
            speaker=second_unit
            message=_"Wow, the bats sure are large around here!"
        [/message]
    [/event]

#ifdef __UNUSED__
    [event]
        name=sighted
        [filter]
            side=1
        [/filter]
        [filter_second]
            type=Dread Bat
        [/filter_second]
        [message]
            speaker=unit
            message=_"I think I saw a giant bat approaching!"
        [/message]
    [/event]
#endif

    [event]
        name=die
        [filter]
            type=Dread Bat
        [/filter]
        [filter_second]
            side=1
            [filter_vision]
                visible=yes
            [/filter_vision]
        [/filter_second]
        [message]
            speaker=second_unit
            message=_"Take that, you filthy flying furball!"
        [/message]
    [/event]

    [event]
        name=die
        first_time_only=no
        [filter]
            side=7
            type=Dread Bat
        [/filter]
        # Ensure side 7 always has enough gold to recruit a new one:
        [store_gold]
            side=7
            variable=s7gold
        [/store_gold]
        [if]
            [variable]
                name=s7gold
                less_than={ON_DIFFICULTY 34 37 40}
            [/variable]
            [and]
                [not]
                    [have_unit]
                        side=7
                        type=Dread Bat
                    [/have_unit]
                [/not]
            [/and]
            [then]
#ifdef DEBUG_MODE
#ifdef DEBUG_MSG
                {DEBUG_MSG "Giving Side 7 some more gold for another bat"}
#endif
#ifdef DEBUG
                {DEBUG "Giving Side 7 some more gold for another bat"}
#endif
                [message]
                    speaker=narrator
                    image=wesnoth-icon.png
                    message=_"Giving Side 7 some more gold for another bat"
                [/message]
#endif
                [gold]
                    side=7
                    amount={ON_DIFFICULTY 34 37 40}
                [/gold]
            [/then]
            [else]
#ifdef DEBUG_MODE
#ifdef DEBUG_MSG
                {DEBUG_MSG "Side 7 already has enough gold: $s7gold (or they already have another bat)"}
#endif
#ifdef DEBUG
                {DEBUG "Side 7 already has enough gold: $s7gold (or they already have another bat)"}
#endif
                [message]
                    speaker=narrator
                    image=wesnoth-icon.png
                    message=_"Side 7 already has enough gold: $s7gold (or they already have another bat)"
                [/message]
#endif
            [/else]
        [/if]
        {CLEAR_VARIABLE s7gold}
    [/event]

    [event]
        name=sighted
        [filter]
            type=Giant Spider
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [message]
            speaker=second_unit
            message=_"Eek! A giant spider!"
        [/message]
    [/event]

    [event]
        name=sighted
        [filter]
            type=Fire Dragon
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [if]
            [variable]
                name=bSeenDragon
                boolean_not_equals=yes
            [/variable]
            [then]
                [message]
                    speaker=second_unit
                    message=_"A dragon!"
                [/message]
                {VARIABLE bSeenDragon yes}
            [/then]
        [/if]
    [/event]

    [event]
        name=sighted
        [filter]
            side=1
        [/filter]
        [filter_second]
            type=Fire Dragon
        [/filter_second]
        [if]
            [variable]
                name=bSeenDragon
                boolean_not_equals=yes
            [/variable]
            [then]
                [message]
                    speaker=unit
                    message=_"A dragon approaches!"
                [/message]
                {VARIABLE bSeenDragon yes}
            [/then]
        [/if]
    [/event]

    [event]
        name=moveto
        [filter]
            side=1
            [filter_location]
                x,y=8,5
            [/filter_location]
        [/filter]
        [if]
            [variable]
                name=bSeenDragon
                boolean_equals=yes
            [/variable]
            [then]
                [message]
                    speaker=unit
                    message=_"Hey, it's the nest of that dragon from before!"
                [/message]
            [/then]
            [else]
                [message]
                    speaker=unit
                    message=_"Hey look, it's some dragon's nest! I hope its guardian isn't nearby..."
                [/message]
            [/else]
        [/if]
        # TODO: what should be inside it?
    [/event]

    # ideas for findable friendly units in this level:
    # - some sort of mainline drake, not sure which
    # - cave drake (UMC; FtF)
    # - Dwarvish Flamethrower (UMC)
    # - {ON_DIFFICULTY (Dwarvish Explorer) (Dwarvish Pathfinder) (Dwarvish Scout)}
    # - Dwarvish Berserker
    # - {ON_DIFFICULTY (Great Mage) (Arch Mage) (Red Mage)}
    # - Silver Mage

    [event]
        name=moveto
        first_time_only=no
        [filter]
            side=1
            [filter_location]
                location_id="sceptre"
            [/filter_location]
        [/filter]
        [message]
            speaker=unit
            message=_"We found it!"
        [/message]
        # TODO: script a cutscene to play here
        [kill]
            side=2,3,4,5,6,7
        [/kill]
        [endlevel]
            result=victory
            linger_mode=yes
            bonus=no
        [/endlevel]
    [/event]

    [event]
        name=victory
        {CLEAR_SCENARIO_VARIABLES}
        {CLEAR_CAMPAIGN_VARIABLES}

        [message]
            side=1
            message=_"Victory!"
        [/message]
    [/event]
    {HERO_DEATHS}
[/scenario]

#undef INITIALIZE_CAMPAIGN_VARIABLES
#undef CLEAR_CAMPAIGN_VARIABLES
#undef INITIALIZE_SCENARIO_VARIABLES
#undef CLEAR_SCENARIO_VARIABLES
